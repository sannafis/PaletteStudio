@page "/studiomockup"

@if (!response.Success)
{
    <div class="alert alert-danger">
        <p>@response.Message</p>
    </div>
}


@if (response == null)
{
    <div class="alert alert-info">
        Loading Palette Studio...
    </div>
}
else
{
    <div class="d-flex justify-content-between">
        <button class="input-group-text btn btn-primary" type="button"><i class="fa-solid fa-chevron-left"></i><span>Back</span></button>
        <div class="d-flex justify-content-between">
            <button data-toggle="tooltip" data-placement="top" title="The name of your palette is only visible to you and will NOT be shown to others if it is public." class="help-btn circle input-group-text btn btn-primary btn-close-white border border-2" type="button"><i class="fa-solid fa-question"></i></button>

            <label class="col-sm-2 col-form-label" for="name">Name:</label>
            <input type="text" name="name" class="form-control" id="name" placeholder="Ex: Cool Palette">
            <button class="input-group-text btn btn-primary" type="button"><i class="fa-solid fa-floppy-disk"></i><span>Save</span></button>
        </div>
    </div>

    <div class="d-flex flex-column flex-md-row p-0 m-0 w-100 shadow-lg w-100 " style="left:0;height:calc(100% - 120px);bottom:0 ;position:absolute">
        @if (IsEditExpanded)
        {
            <div class="flex-grow-1 bg-black position-relative p-0">
                @*<button type="button" class="btn btn-outline-secondary circle border-2"><i class="fa-solid fa-x"></i></button>*@
                <button type="button" class="btn btn-outline-secondary m-0 border-2 float-" style="left: 50%; top: 0; bottom: 0;">Open</button>
            </div>
        }
        <div class="flex-grow-1">



            <div class="palette-view" style="height:100%">
                <div class=" d-flex flex-nowrap @paletteOrientCurrent p-0 h-100">
                    @for (int i = 1; i <= 6; i++)
                    {
                        <div @onclick=@OpenEditWindow class="pe-auto flex-grow-1 d-flex flex-wrap @colourGroupOrientCurrent h-100 border border-1 border-danger">
                            <div class="flex-grow-1 d-flex flex-wrap flex-column-reverse border border-1 border-white" style="background-color:black;"></div>
                            <div class="flex-grow-1 flex-wrap d-flex @subColourOrientCurrent" style="max-height:100%;">

                                @for (int x = 1; x <= 6; x++)
                                {
                                    <div class="flex-grow-1 border border-1 border-white" style="background-color:red;"></div>
                                }
                            </div>
                        </div>
                    }
                </div>
            </div>

        </div>

    </div>

    /*
            <div class="d-flex justify-content-between">
                <button class="input-group-text btn btn-primary" type="button"><i class="fa-solid fa-chevron-left"></i><span>Back</span></button>
                <div class="d-flex justify-content-between">
                    <button data-toggle="tooltip" data-placement="top" title="The name of your palette is only visible to you and will NOT be shown to others if it is public." class="help-btn circle input-group-text btn btn-primary btn-close-white border border-2" type="button"><i class="fa-solid fa-question"></i></button>

                    <label class="col-sm-2 col-form-label" for="name">Name:</label>
                    <input type="text" name="name" class="form-control" id="name" placeholder="Ex: Cool Palette">
                    <button class="input-group-text btn btn-primary" type="button"><i class="fa-solid fa-floppy-disk"></i><span>Save</span></button>
                </div>
            </div>

            <div class="p-0 m-0 w-100 shadow-lg" style="left:0;height:calc(100% - 120px);bottom:0 ;position:absolute">
                <div class="palette-view" style="height:99%">
                    <div class=" d-flex flex-nowrap flex-column flex-lg-row p-0 h-100">
                        @for (int i=1;i<=6;i++)
                        {
                            <div class="flex-grow-1 d-flex flex-wrap flex-row flex-lg-column h-100 ">
                                <div class="flex-grow-1 d-flex flex-wrap flex-column-reverse border border-1 border-white" style="background-color:black;">
                                </div>
                                <div class="flex-grow-1 d-flex flex-lg-row flex-column-reverse" style="max-height:100%">

                                    @for (int x=1;x<=4;x++)
                                    {
                                        <div class="flex-grow-1 border border-1 border-white" style="background-color:red;"></div>
                                    }
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>
            */

}

@code {
    private Response<PaletteReadOnlyDto> response = new Response<PaletteReadOnlyDto> { Success = true };

    // properties for changing between different css classes dynamically
    private string paletteOrientCurrent { get; set; } = paletteOrientNorm;
    private string colourGroupOrientCurrent { get; set; } = colourGroupOrientNorm;
    private string subColourOrientCurrent { get; set; } = subColourOrientNorm;

    // constants for normal orientation of elements
    private const string paletteOrientNorm = "flex-column flex-md-row";
    private const string colourGroupOrientNorm = "flex-row flex-md-column";
    private const string subColourOrientNorm = "flex-md-row flex-column-reverse";

    // constants for orientation of elements when Edit Window is expanded
    private const string paletteOrientExp = "flex-row flex-md-column";
    private const string colourGroupOrientExp = "flex-column flex-md-row";
    private const string subColourOrientExp = "flex-md-column flex-row-reverse";

    private bool IsEditExpanded
    {
        get;
        set;
    } = false;

    protected override async Task OnInitializedAsync()
    {
        IsEditExpanded = false;

    }

    private void OpenEditWindow()
    {
        IsEditExpanded = true;
        paletteOrientCurrent = paletteOrientExp;
        colourGroupOrientCurrent = colourGroupOrientExp;
        subColourOrientCurrent = subColourOrientExp;
    }

}

