@page "/auth/login"
@inject IAuthenticationService authService
@inject NavigationManager navManager

<h3>Register</h3>

@if (!string.IsNullOrEmpty(message))
{
    <div class="alert alert-danger">
        <p>@message</p>
    </div>
}

<EditForm Model=@LoginModel OnValidSubmit=@LoginUser>
    <DataAnnotationsValidator />
    <ValidationSummary />
    <div class="form-group">
        <label for="email">Email Address</label>
        <InputText id="email" class="form-control" @bind-Value="LoginModel.Email" />
        <ValidationMessage For=@(() => LoginModel.Email) />
    </div>
    <div class="form-group">
        <label for="password">Password</label>
        <InputText id="password" type="password" class="form-control" @bind-Value="LoginModel.Password" />
        <ValidationMessage For=@(() => LoginModel.Password) />
    </div>

    <button type="submit" class="btn btn-primary">Login</button>

</EditForm>

@code {
    public UserLoginDto LoginModel = new UserLoginDto();
    string message = string.Empty;
    private async Task LoginUser()
    {
            var response = await authService.AuthenticateAsync(LoginModel);
            if(response.Success){
                navManager.NavigateTo("/");
            }
            message = response.Message;
    }
}
